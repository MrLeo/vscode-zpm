{"version":3,"sources":["../webpack/bootstrap",".././src/extension.ts",".././src/commands.ts",".././src/common.ts","../external \"vscode\"",".././src/tag.ts",".././node_modules/simple-git/promise.js",".././node_modules/simple-git/src/index.js",".././node_modules/simple-git/src/git.js",".././node_modules/simple-git/node_modules/debug/src/index.js",".././node_modules/simple-git/node_modules/debug/src/browser.js",".././node_modules/simple-git/node_modules/debug/src/common.js",".././node_modules/simple-git/node_modules/ms/index.js",".././node_modules/simple-git/node_modules/debug/src/node.js","../external \"tty\"","../external \"util\"",".././node_modules/supports-color/index.js",".././node_modules/simple-git/src/util/deferred.js",".././node_modules/simple-git/src/util/exists.js","../external \"fs\"",".././node_modules/simple-git/src/responses/ListLogSummary.js",".././node_modules/simple-git/src/responses sync ^\\.\\/.*$",".././node_modules/simple-git/src/responses/BranchDeleteSummary.js",".././node_modules/simple-git/src/responses/BranchSummary.js",".././node_modules/simple-git/src/responses/CommitSummary.js",".././node_modules/simple-git/src/responses/DiffSummary.js",".././node_modules/simple-git/src/responses/FetchSummary.js",".././node_modules/simple-git/src/responses/FileStatusSummary.js",".././node_modules/simple-git/src/responses/MergeSummary.js",".././node_modules/simple-git/src/responses/PullSummary.js",".././node_modules/simple-git/src/responses/MoveSummary.js",".././node_modules/simple-git/src/responses/StatusSummary.js",".././node_modules/simple-git/src/responses/TagList.js","../external \"child_process\"","../external \"buffer\"",".././node_modules/semver/semver.js",".././node_modules/dayjs/dayjs.min.js"],"names":[],"mappings":"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A;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;;AAEA;AACA,aAAa,QAAQ;AACrB;AACA,8CAA8C,MAAoB;;AAElE;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA,2EAA2E,mBAAO,CAAC,EAA4B;AAC/G;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA,8CAA8C,UAAU;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,aAAa;AACb,UAAU;AACV,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA,4EAA4E,KAAK,MAAM;AACvF;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC,cAAc,SAAS;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,6DAA6D,mBAAO,CAAC,EAA4B;;AAEjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,yEAAyE,iBAAiB;AAC1F;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;AACA,UAAU;;AAEV;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,wBAAQ,IAAc,OAAO,CAAC;AACrD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,CAAC;;;;;;;AC/iDD;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAO,CAAC,CAAc;AACxC,CAAC;AACD,kBAAkB,mBAAO,CAAC,EAAW;AACrC;;;;;;;ACTA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,EAAU;;AAEnC,OAAO,WAAW;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;ACtQA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,EAAI;;AAEpC;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,aAAa,kCAAkC;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;;AAEA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;;;;;;ACzQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB,YAAY,MAAM;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACjKA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,EAAK;AACzB,aAAa,mBAAO,CAAC,EAAM;;AAE3B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,EAAgB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,4DAA4D;AAC5D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA;;AAEA;AACA;AACA,CAAC,IAAI;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ,2BAA2B;;AAEnC;AACA;AACA,iDAAiD,EAAE;AACnD,sBAAsB,WAAW,IAAI,KAAK;;AAE1C;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,EAAU;;AAEnC,OAAO,WAAW;;AAElB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;AChQA,gC;;;;;;ACAA,iC;;;;;;;ACAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;AChDD;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;;;;;;;ACRA,SAAS,mBAAO,CAAC,EAAI;;AAErB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;;;;;AChCA,+B;;;;;;;ACCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,UAAU;AACV;AACA;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uB;;;;;;;AC5CA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;;;;;;;AClDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;AC1DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;;;;;;;AC3Ea;;AAEb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,OAAO;;AAEP;AACA;;AAEA;;;;;;;;ACtDa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACrBa;AACb;;AAEA,kBAAkB,mBAAO,CAAC,EAAe;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,yDAAyD,UAAU;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AC/EA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACvIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,6CAA6C,UAAU;AACvD;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;;;;;;;;;;AC5BA,wBAAwB,mBAAO,CAAC,EAAqB;;AAErD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,EAAE;AACxC,4BAA4B,EAAE;AAC9B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,IAAI;;AAEJ;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnLA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B,oBAAoB,EAAE;AAClD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oEAAoE,OAAO;AAC3E;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA,mEAAmE,8BAA8B,EAAE;;AAEnG;AACA;;;;;;;ACjDA,0C;;;;;;ACAA,mC;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,oCAAoC;AACxD,0BAA0B,oCAAoC;AAC9D,0BAA0B,oCAAoC;AAC9D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,sCAAsC;AACtC,oCAAoC;AACpC,sCAAsC;AACtC,oCAAoC;AACpC,sCAAsC;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2BAA2B;AAC3B,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,2BAA2B;AAC3B,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,sF;AACA;;;;;;;ACv0CA,eAAe,KAAoD,oBAAoB,SAA2D,CAAC,iBAAiB,aAAa,+FAA+F,EAAE,OAAO,IAAI,OAAO,IAAI,YAAY,IAAI,QAAQ,IAAI,QAAQ,IAAI,QAAQ,IAAI,kBAAkB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,OAAO,IAAI,GAAG,IAAI,GAAG,IAAI,yBAAyB,gBAAgB,yDAAyD,IAAI,kBAAkB,6DAA6D,+CAA+C,iBAAiB,8GAA8G,yCAAyC,eAAe,yCAAyC,eAAe,OAAO,iCAAiC,kDAAkD,eAAe,mBAAmB,IAAI,mMAAmM,aAAa,OAAO,kBAAkB,sBAAsB,mBAAmB,MAAM,kBAAkB,kDAAkD,KAAK,aAAa,WAAW,kBAAkB,mBAAmB,yBAAyB,4BAA4B,cAAc,MAAM,yBAAyB,KAAK,8BAA8B,YAAY,qBAAqB,GAAG,iBAAiB,cAAc,sDAAsD,kBAAkB,2BAA2B,oBAAoB,qBAAqB,iCAAiC,0BAA0B,wCAAwC,uCAAuC,iBAAiB,oJAAoJ,mBAAmB,gBAAgB,mBAAmB,cAAc,oLAAoL,qBAAqB,SAAS,sBAAsB,6CAA6C,wBAAwB,WAAW,4CAA4C,yBAAyB,4BAA4B,0BAA0B,0BAA0B,sBAAsB,oCAAoC,oBAAoB,yBAAyB,qBAAqB,yBAAyB,mBAAmB,yBAAyB,oBAAoB,8BAA8B,oBAAoB,yBAAyB,sBAAsB,yBAAyB,sBAAsB,yBAAyB,2BAA2B,0BAA0B,mBAAmB,sCAAsC,sBAAsB,yBAAyB,yBAAyB,kDAAkD,wDAAwD,sBAAsB,iBAAiB,oFAAoF,0DAA0D,UAAU,gCAAgC,gCAAgC,yDAAyD,0BAA0B,wCAAwC,+BAA+B,+BAA+B,oCAAoC,6BAA6B,qBAAqB,0BAA0B,sBAAsB,iDAAiD,2KAA2K,kDAAkD,qBAAqB,8BAA8B,qBAAqB,aAAa,YAAY,6BAA6B,yCAAyC,oDAAoD,eAAe,qBAAqB,4CAA4C,6BAA6B,6BAA6B,qBAAqB,qBAAqB,WAAW,2DAA2D,mBAAmB,0BAA0B,wBAAwB,sBAAsB,WAAW,wCAAwC,yGAAyG,iCAAiC,eAAe,8BAA8B,IAAI,8eAA8e,+BAA+B,wEAAwE,EAAE,wBAAwB,sDAAsD,wBAAwB,oFAAoF,cAAc,yHAAyH,0BAA0B,wBAAwB,sBAAsB,kBAAkB,wBAAwB,qBAAqB,mBAAmB,wBAAwB,oBAAoB,+BAA+B,qBAAqB,yBAAyB,qBAAqB,0BAA0B,0BAA0B,6BAA6B,uBAAuB,6BAA6B,GAAG,GAAG,sDAAsD,kBAAkB,2CAA2C,gBAAgB,oBAAoB","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/*\n * @Company: 智联招聘\n * @Author: xuebin.me\n * @LastEditors: Leo\n * @version: 0.0.0\n * @Description: 插件入口文件\n * @Date: 2019-03-12 16:58:32\n * @LastEditTime: 2019-03-15 12:04:38\n */\n\n// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport { ExtensionContext } from 'vscode'\nimport { registerCommands } from './commands'\n\n// #region 激活插件\nexport function activate(context: ExtensionContext) {\n  registerCommands(context)\n}\n// #endregion\n\n// #region 销毁插件\nexport function deactivate() {}\n// #endregion\n","/*\n * @Company: 智联招聘\n * @Author: xuebin.me\n * @LastEditors: Leo\n * @version: 0.0.0\n * @Description: 集中导出命令\n * @Date: 2019-03-14 09:49:10\n * @LastEditTime: 2019-03-15 12:05:08\n */\n\nexport * from './common'\nexport * from './tag'\n","/*\n * @Company: 智联招聘\n * @Author: xuebin.me\n * @LastEditors: Leo\n * @version: 0.0.0\n * @Description: 通用方法\n * @Date: 2019-03-13 20:17:45\n * @LastEditTime: 2019-03-15 15:45:57\n */\n\nimport { ExtensionContext, window, workspace, WorkspaceFolder } from 'vscode'\n\n// #region CommandConstructor: 接口 - 命令构造函数\ninterface CommandConstructor {\n  new (): any\n}\n// #endregion\n\n// #region registrableCommands: 可注册的命令构造函数列表\nconst registrableCommands: CommandConstructor[] = []\n// #endregion\n\n// #region command: 修饰器 - 命令类\n/**\n * 类修饰器\n * @export\n * @returns {ClassDecorator}\n */\nexport function command(): ClassDecorator {\n  return (target: any) => {\n    registrableCommands.push(target)\n  }\n}\n// #endregion\n\n// #region registerCommands: 注册命令\n/**\n * 注册命令\n * @export\n * @param {ExtensionContext} context\n */\nexport function registerCommands(context: ExtensionContext) {\n  for (const c of registrableCommands) {\n    context.subscriptions.push(new c())\n  }\n}\n// #endregion\n\n// #region Commands: 枚举 - 命令\nexport enum Commands {\n  tag = 'extension.tag',\n}\n// #endregion\n\n// #region QuickPickItem: 接口 - 可选列表项数据结构\nexport interface QuickPickItem {\n  label: string // 命令\n  description?: string // 命令描述\n  path?: string // 工程路径\n  versionName?: string // 配置不同环境的version属性名\n}\n// #endregion\n\n// #region showQuickPick: 显示可选项列表\n/**\n * 显示选框\n * @param {QuickPickItem[]} QuickPickList\n * @returns\n */\nexport async function showQuickPick(QuickPickList: QuickPickItem[]) {\n  return new Promise<QuickPickItem>((resolve, reject) => {\n    try {\n      window.showQuickPick(QuickPickList).then(command => {\n        console.log('TCL: showQuickPick -> command', command)\n        resolve(command)\n      })\n    } catch (err) {\n      console.log('TCL: catch -> err', err)\n      reject(err)\n    }\n  })\n}\n// #endregion\n\n// #region getWorkspaceFolders: 获取目录列表\n/**\n * 获取目录列表\n */\nexport function getWorkspaceFolders() {\n  const workspaceFolders: WorkspaceFolder[] = workspace.workspaceFolders || []\n  console.log('TCL: Tag -> getWorkspaceFolders -> workspaceFolders', workspaceFolders)\n  console.log('TCL: Tag -> getWorkspaceFolders -> vscode.workspace.rootPath', workspace.rootPath)\n  return workspaceFolders.map(folder => {\n    return {\n      label: folder.name,\n      path: folder.uri.path,\n    }\n  })\n}\n// #endregion\n","module.exports = require(\"vscode\");","/*\n * @Company: 智联招聘\n * @Author: xuebin.me\n * @LastEditors: Leo\n * @version: 0.0.0\n * @Description: 🔖 创建Tag\n * @Date: 2019-03-13 16:04:30\n * @LastEditTime: 2019-03-16 16:11:58\n */\n\nimport { commands, Disposable, window, ProgressLocation } from 'vscode'\nimport { Commands, command, showQuickPick, QuickPickItem, getWorkspaceFolders } from './common'\n\nconst simpleGit = require('simple-git/promise')\nconst semver = require('semver')\nconst dayjs = require('dayjs')\n\n// #region 接口声明\nexport interface Version {\n  env?: string // 环境\n  tag?: string // 标签\n  version?: string // 版本号\n}\n// #endregion\n\n// #region 环境列表选项\nexport const COMMAND_DEFINITIONS: QuickPickItem[] = [\n  {\n    label: 'master',\n    description: '线上环境',\n    versionName: 'version',\n  },\n  {\n    label: 'pre',\n    description: '预上线环境',\n    versionName: 'version_pre',\n  },\n  {\n    label: 'dev',\n    description: 'QA测试环境',\n    versionName: 'version_dev',\n  },\n  {\n    label: 'all',\n    description: '所有环境',\n  },\n]\n// #endregion\n\n@command()\nexport class Tag {\n  private _disposable: Disposable\n  private _env?: string\n  private _path?: string\n  private _folders: QuickPickItem[] = []\n  private _git?: any\n\n  get git(): any {\n    if (!this._git) {\n      this._git = simpleGit(this._path || process.cwd())\n    }\n    return this._git\n  }\n\n  constructor() {\n    this._disposable = commands.registerCommand(Commands.tag, async (...args) => {\n      console.log('TCL: Tag -> constructor -> args', args)\n      try {\n        await this.quickPickPath()\n        await this.quickPickEnv()\n\n        // tslint:disable-next-line: no-unused-expression\n        this._env && (await this.addTagByTags(this._env))\n\n        console.log('TCL: Tag -> constructor -> path & env', this._path, this._env)\n      } catch (err) {\n        window.showErrorMessage(err.message)\n      }\n    })\n  }\n\n  // #region 选择目录\n  /**\n   * 选择目录\n   * @memberof Tag\n   */\n  async quickPickPath() {\n    this._folders = getWorkspaceFolders()\n\n    if (this._folders.length > 0) {\n      if (this._folders.length === 1) {\n        this._path = this._folders[0].path\n      } else {\n        let commandFolder = await showQuickPick(this._folders)\n        console.log('TCL: Tag -> quickPickPath -> 选择的目录', commandFolder)\n        this._path = commandFolder.path\n      }\n    }\n  }\n  // #endregion\n\n  // #region 选择环境\n  /**\n   * quickPickEnv\n   * @memberof Tag\n   */\n  async quickPickEnv() {\n    let commandEnv: QuickPickItem = await showQuickPick(COMMAND_DEFINITIONS)\n    console.log('TCL: Tag -> quickPickEnv -> 选择的环境', commandEnv)\n    this._env = commandEnv.label\n  }\n  // #endregion\n\n  // #region 根据Tag列表添加Tag\n  /**\n   * 根据Tag列表添加Tag\n   * @param {string} env master|pre|dev|all\n   * @memberof Tag\n   */\n  async addTagByTags(env: string) {\n    window.withProgress(\n      {\n        location: ProgressLocation.Notification,\n        title: '创建Tag',\n        cancellable: true,\n      },\n      async (progress, token) => {\n        token.onCancellationRequested(() => {\n          window.showInformationMessage(`🏷 取消创建`)\n        })\n\n        progress.report({ increment: 10, message: '获取所有tag' })\n        // const tags = fs.readdirSync('./.git/refs/tags'); // 同步版本的readdir\n        await this.commitAllFiles()\n        await this.git.pull({ '--rebase': 'true' })\n        const tags = await this.git.tags()\n\n        let addTagSingle = async (envName: string) => {\n          // 当前环境的最大版本号\n          let lastVsersion = '0.0.0'\n          // 当前环境的版本号列表过滤\n          let versions = tags.all.filter(\n            (item: any) =>\n              !!item.replace(/^(dev.*|qa|pre|master)-v((\\d+\\.?)+)-(\\d{8})$/gi, (...arg: any) => {\n                let matchStr = arg[0] || ''\n                let tagEnv = arg[1] || ''\n\n                progress.report({ message: `格式化版本号: ${matchStr}` })\n\n                // 因为新老QA的tag前缀不同，为了兼容则根据已经创建的tag前缀来创建，默认QA的tag前缀是dev\n                if (envName === 'dev' && /dev.*|qa/.test(tagEnv)) {\n                  envName = tagEnv\n                }\n                if (tagEnv !== envName) {\n                  return ''\n                }\n\n                // 格式化版本号，将诸如 0.0.01.001 中多余的 0 去掉\n                progress.report({ message: `格式化版本号: ${matchStr}` })\n                let tagVersion =\n                  semver.valid(semver.coerce(arg[2].replace(/\\.0+(\\d|0\\.)/g, '.$1'))) ||\n                  lastVsersion\n\n                // 比较版本号，记录最大版本号\n                progress.report({ message: `比较版本号: ${tagVersion} & ${lastVsersion}` })\n                lastVsersion = semver.gt(tagVersion, lastVsersion) ? tagVersion : lastVsersion\n                return matchStr\n              }),\n          )\n          console.log('TCL: Tag -> addTagSingle -> versions', versions)\n          window.showInformationMessage(`🏷 当前环境的版本号列表:\\r\\n${versions.join('    /    ')}`)\n          let version = await this.generateNewTag(envName, lastVsersion)\n          progress.report({ message: `生成新版本号: ${JSON.stringify(version)}` })\n          await this.addTag([version])\n        }\n\n        return env === 'all'\n          ? await Promise.all(\n              COMMAND_DEFINITIONS.map(item =>\n                item.versionName ? addTagSingle(item.label) : Promise.resolve(),\n              ),\n            )\n          : [await addTagSingle(env)]\n      },\n    )\n  }\n  // #endregion\n\n  // #region commit 提交所有未提交的文件\n  /**\n   * commit 提交所有未提交的文件\n   * @memberof Tag\n   */\n  async commitAllFiles() {\n    let statusSummary = await this.git.status()\n    if (statusSummary.files.length) {\n      await this.git.add('./*')\n      await this.git.commit('🚀🔖')\n      window.showWarningMessage('🚨 有未提交的文件变更已提交')\n    }\n  }\n  // #endregion\n\n  // #region 添加Tag\n  /**\n   * 添加Tag\n   * @param {Array<Version>} versions\n   * @memberof Tag\n   */\n  async addTag(versions: Array<Version>) {\n    await this.git.pull({ '--rebase': 'true' })\n\n    versions.forEach(async (version: Version) => {\n      await this.git.addTag(version.tag)\n      window.showInformationMessage(`🔖 添加新Tag: ${version.tag}`, version.tag || '')\n      await this.git.push()\n    })\n  }\n  // #endregion\n\n  // #region 生成新Tag\n  /**\n   * 生成新Tag\n   * @param {string} [env='pre']  master|pre|dev|all\n   * @param {string} [version='0.0.0'] 前一个版本号\n   * @returns [version='0.0.1'] 新版本号\n   * @memberof Tag\n   */\n  generateNewTag(env: string = 'pre', version: string = '0.0.0') {\n    return new Promise(resolve => {\n      // const major = semver.major(version)\n      const minor = semver.minor(version)\n      const patch = semver.patch(version)\n      const date = dayjs().format('YYYYMMDD')\n      const config = { env, version, tag: `${env}-v${version}-${date}` }\n      if (patch >= 99) {\n        config.version = semver.inc(version, 'minor')\n      } else if (minor >= 99) {\n        config.version = semver.inc(version, 'major')\n      } else {\n        config.version = semver.inc(version, 'patch')\n      }\n      config.tag = `${env}-v${config.version}-${date}`\n      resolve(config)\n    })\n  }\n  // #endregion\n}\n","'use strict';\n\nif (typeof Promise === 'undefined') {\n   throw new ReferenceError(\"Promise wrappers must be enabled to use the promise API\");\n}\n\nfunction asyncWrapper (fn, git, chain) {\n   return function () {\n      var args = [].slice.call(arguments);\n\n      if (typeof args[args.length] === 'function') {\n         throw new TypeError(\n            \"Promise interface requires that handlers are not supplied inline, \" +\n            \"trailing function not allowed in call to \" + fn);\n      }\n\n      return chain.then(function () {\n         return new Promise(function (resolve, reject) {\n            args.push(function (err, result) {\n               if (err) {\n                  reject(new Error(err));\n               }\n               else {\n                  resolve(result);\n               }\n            });\n\n            git[fn].apply(git, args);\n         });\n      });\n   };\n}\n\nfunction syncWrapper (fn, git, api) {\n   return function () {\n      git[fn].apply(git, arguments);\n\n      return api;\n   };\n}\n\nfunction isAsyncCall (fn) {\n   return /^[^\\)]+then\\s*\\)/.test(fn) || /\\._run\\(/.test(fn);\n}\n\nmodule.exports = function (baseDir) {\n\n   var git;\n   var chain = Promise.resolve();\n\n   try {\n      git = require('./src')(baseDir);\n   }\n   catch (e) {\n      chain = Promise.reject(e);\n   }\n\n   return Object.keys(git.constructor.prototype).reduce(function (api, fn) {\n      if (/^_|then/.test(fn)) {\n         return api;\n      }\n\n      if (isAsyncCall(git[fn])) {\n         api[fn] = asyncWrapper(fn, git, chain);\n      }\n\n      else {\n         api[fn] = syncWrapper(fn, git, api);\n      }\n\n      return api;\n\n   }, {});\n\n};\n","\nvar Git = require('./git');\n\nvar ChildProcess = require('child_process');\nvar Buffer = require('buffer').Buffer;\nvar exists = require('./util/exists');\n\nmodule.exports = function (baseDir) {\n\n    if (baseDir && !exists(baseDir, exists.FOLDER)) {\n        throw new Error(\"Cannot use simple-git on a directory that does not exist.\");\n    }\n\n    return new Git(baseDir || process.cwd(), ChildProcess, Buffer);\n};\n\n","(function () {\n\n   'use strict';\n\n   var debug = require('debug')('simple-git');\n   var deferred = require('./util/deferred');\n   var exists = require('./util/exists');\n   var NOOP = function () {};\n\n   /**\n    * Git handling for node. All public functions can be chained and all `then` handlers are optional.\n    *\n    * @param {string} baseDir base directory for all processes to run\n    *\n    * @param {Object} ChildProcess The ChildProcess module\n    * @param {Function} Buffer The Buffer implementation to use\n    *\n    * @constructor\n    */\n   function Git (baseDir, ChildProcess, Buffer) {\n      this._baseDir = baseDir;\n      this._runCache = [];\n\n      this.ChildProcess = ChildProcess;\n      this.Buffer = Buffer;\n   }\n\n   /**\n    * @type {string} The command to use to reference the git binary\n    */\n   Git.prototype._command = 'git';\n\n   /**\n    * @type {[key: string]: string} An object of key=value pairs to be passed as environment variables to the\n    *                               spawned child process.\n    */\n   Git.prototype._env = null;\n\n   /**\n    * @type {Function} An optional handler to use when a child process is created\n    */\n   Git.prototype._outputHandler = null;\n\n   /**\n    * @type {boolean} Property showing whether logging will be silenced - defaults to true in a production environment\n    */\n   Git.prototype._silentLogging = /prod/.test(process.env.NODE_ENV);\n\n   /**\n    * Sets the path to a custom git binary, should either be `git` when there is an installation of git available on\n    * the system path, or a fully qualified path to the executable.\n    *\n    * @param {string} command\n    * @returns {Git}\n    */\n   Git.prototype.customBinary = function (command) {\n      this._command = command;\n      return this;\n   };\n\n   /**\n    * Sets an environment variable for the spawned child process, either supply both a name and value as strings or\n    * a single object to entirely replace the current environment variables.\n    *\n    * @param {string|Object} name\n    * @param {string} [value]\n    * @returns {Git}\n    */\n   Git.prototype.env = function (name, value) {\n      if (arguments.length === 1 && typeof name === 'object') {\n         this._env = name;\n      }\n      else {\n         (this._env = this._env || {})[name] = value;\n      }\n\n      return this;\n   };\n\n   /**\n    * Sets the working directory of the subsequent commands.\n    *\n    * @param {string} workingDirectory\n    * @param {Function} [then]\n    * @returns {Git}\n    */\n   Git.prototype.cwd = function (workingDirectory, then) {\n      var git = this;\n      var next = Git.trailingFunctionArgument(arguments);\n\n      return this.exec(function () {\n         git._baseDir = workingDirectory;\n         if (!exists(workingDirectory, exists.FOLDER)) {\n            Git.exception(git, 'Git.cwd: cannot change to non-directory \"' + workingDirectory + '\"', next);\n         }\n         else {\n            next && next(null, workingDirectory);\n         }\n      });\n   };\n\n   /**\n    * Sets a handler function to be called whenever a new child process is created, the handler function will be called\n    * with the name of the command being run and the stdout & stderr streams used by the ChildProcess.\n    *\n    * @example\n    * require('simple-git')\n    *    .outputHandler(function (command, stdout, stderr) {\n    *       stdout.pipe(process.stdout);\n    *    })\n    *    .checkout('https://github.com/user/repo.git');\n    *\n    * @see http://nodejs.org/api/child_process.html#child_process_class_childprocess\n    * @see http://nodejs.org/api/stream.html#stream_class_stream_readable\n    * @param {Function} outputHandler\n    * @returns {Git}\n    */\n   Git.prototype.outputHandler = function (outputHandler) {\n      this._outputHandler = outputHandler;\n      return this;\n   };\n\n   /**\n    * Initialize a git repo\n    *\n    * @param {Boolean} [bare=false]\n    * @param {Function} [then]\n    */\n   Git.prototype.init = function (bare, then) {\n      var commands = ['init'];\n      var next = Git.trailingFunctionArgument(arguments);\n\n      if (bare === true) {\n         commands.push('--bare');\n      }\n\n      return this._run(commands, function (err) {\n         next && next(err);\n      });\n   };\n\n   /**\n    * Check the status of the local repo\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.status = function (then) {\n      return this._run(\n         ['status', '--porcelain', '-b', '-u'],\n         Git._responseHandler(then, 'StatusSummary')\n      );\n   };\n\n   /**\n    * List the stash(s) of the local repo\n    *\n    * @param {Object|Array} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.stashList = function (options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n      var opt = (handler === then ? options : null) || {};\n\n      var splitter = opt.splitter || ';;;;';\n      var command = [\n         \"stash\",\n         \"list\",\n         \"--pretty=format:%H %ai %s%d %aN %ae\".replace(/\\s+/g, splitter) + require('./responses/ListLogSummary').COMMIT_BOUNDARY\n      ];\n\n      if (Array.isArray(opt)) {\n         command = command.concat(opt);\n      }\n\n      return this._run(command,\n         Git._responseHandler(handler, 'ListLogSummary', splitter)\n      );\n   };\n\n   /**\n    * Stash the local repo\n    *\n    * @param {Object|Array} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.stash = function (options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n      var command = [\"stash\"];\n\n      if (Array.isArray(options)) {\n         command = command.concat(options);\n      }\n      else {\n         Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && data);\n      });\n   };\n\n   /**\n    * Clone a git repo\n    *\n    * @param {string} repoPath\n    * @param {string} localPath\n    * @param {String[]} [options] Optional array of options to pass through to the clone command\n    * @param {Function} [then]\n    */\n   Git.prototype.clone = function (repoPath, localPath, options, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = ['clone'].concat(Git.trailingArrayArgument(arguments));\n\n      for (var i = 0, iMax = arguments.length; i < iMax; i++) {\n         if (typeof arguments[i] === 'string') {\n            command.push(arguments[i]);\n         }\n      }\n\n      return this._run(command, function (err, data) {\n         next && next(err, data);\n      });\n   };\n\n   /**\n    * Mirror a git repo\n    *\n    * @param {string} repoPath\n    * @param {string} localPath\n    * @param {Function} [then]\n    */\n   Git.prototype.mirror = function (repoPath, localPath, then) {\n      return this.clone(repoPath, localPath, ['--mirror'], then);\n   };\n\n   /**\n    * Moves one or more files to a new destination.\n    *\n    * @see https://git-scm.com/docs/git-mv\n    *\n    * @param {string|string[]} from\n    * @param {string} to\n    * @param {Function} [then]\n    */\n   Git.prototype.mv = function (from, to, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      var command = [].concat(from);\n      command.unshift('mv', '-v');\n      command.push(to);\n\n      this._run(command, Git._responseHandler(handler, 'MoveSummary'))\n   };\n\n   /**\n    * Internally uses pull and tags to get the list of tags then checks out the latest tag.\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.checkoutLatestTag = function (then) {\n      var git = this;\n      return this.pull(function() {\n         git.tags(function(err, tags) {\n            git.checkout(tags.latest, then);\n         });\n      });\n   };\n\n   /**\n    * Adds one or more files to source control\n    *\n    * @param {string|string[]} files\n    * @param {Function} [then]\n    */\n   Git.prototype.add = function (files, then) {\n      return this._run(['add'].concat(files), function (err, data) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Commits changes in the current working directory - when specific file paths are supplied, only changes on those\n    * files will be committed.\n    *\n    * @param {string|string[]} message\n    * @param {string|string[]} [files]\n    * @param {Object} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.commit = function (message, files, options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      var command = ['commit'];\n\n      [].concat(message).forEach(function (message) {\n         command.push('-m', message);\n      });\n\n      [].push.apply(command, [].concat(typeof files === \"string\" || Array.isArray(files) ? files : []));\n\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      return this._run(\n         command,\n         Git._responseHandler(handler, 'CommitSummary')\n      );\n   };\n\n   /**\n    * Gets a function to be used for logging.\n    *\n    * @param {string} level\n    * @param {string} [message]\n    *\n    * @returns {Function}\n    * @private\n    */\n   Git.prototype._getLog = function (level, message) {\n      var log = this._silentLogging ? NOOP : console[level].bind(console);\n      if (arguments.length > 1) {\n         log(message);\n      }\n      return log;\n   };\n\n   /**\n    * Pull the updated contents of the current repo\n    *\n    * @param {string} [remote] When supplied must also include the branch\n    * @param {string} [branch] When supplied must also include the remote\n    * @param {Object} [options] Optionally include set of options to merge into the command\n    * @param {Function} [then]\n    */\n   Git.prototype.pull = function (remote, branch, options, then) {\n      var command = [\"pull\"];\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      if (typeof remote === 'string' && typeof branch === 'string') {\n         command.push(remote, branch);\n      }\n\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      return this._run(command, Git._responseHandler(handler, 'PullSummary'));\n   };\n\n   /**\n    * Fetch the updated contents of the current repo.\n    *\n    * @example\n    *   .fetch('upstream', 'master') // fetches from master on remote named upstream\n    *   .fetch(function () {}) // runs fetch against default remote and branch and calls function\n    *\n    * @param {string} [remote]\n    * @param {string} [branch]\n    * @param {Function} [then]\n    */\n   Git.prototype.fetch = function (remote, branch, then) {\n      var command = [\"fetch\"];\n      var next = Git.trailingFunctionArgument(arguments);\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      if (typeof remote === 'string' && typeof branch === 'string') {\n         command.push(remote, branch);\n      }\n\n      if (Array.isArray(remote)) {\n         command = command.concat(remote);\n      }\n\n      return this._run(\n         command,\n         Git._responseHandler(next, 'FetchSummary'),\n         {\n            concatStdErr: true\n         }\n      );\n   };\n\n   /**\n    * Disables/enables the use of the console for printing warnings and errors, by default messages are not shown in\n    * a production environment.\n    *\n    * @param {boolean} silence\n    * @returns {Git}\n    */\n   Git.prototype.silent = function (silence) {\n      this._silentLogging = !!silence;\n      return this;\n   };\n\n   /**\n    * List all tags. When using git 2.7.0 or above, include an options object with `\"--sort\": \"property-name\"` to\n    * sort the tags by that property instead of using the default semantic versioning sort.\n    *\n    * Note, supplying this option when it is not supported by your Git version will cause the operation to fail.\n    *\n    * @param {Object} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.tags = function (options, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n\n      var command = ['-l'];\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      var hasCustomSort = command.some(function (option) {\n         return /^--sort=/.test(option);\n      });\n\n      return this.tag(\n         command,\n         Git._responseHandler(next, 'TagList', [hasCustomSort])\n      );\n   };\n\n   /**\n    * Rebases the current working copy. Options can be supplied either as an array of string parameters\n    * to be sent to the `git rebase` command, or a standard options object.\n    *\n    * @param {Object|String[]} [options]\n    * @param {Function} [then]\n    * @returns {Git}\n    */\n   Git.prototype.rebase = function (options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n      var command = ['rebase'];\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && data);\n      })\n   };\n\n   /**\n    * Reset a repo\n    *\n    * @param {string|string[]} [mode=soft] Either an array of arguments supported by the 'git reset' command, or the\n    *                                        string value 'soft' or 'hard' to set the reset mode.\n    * @param {Function} [then]\n    */\n   Git.prototype.reset = function (mode, then) {\n      var command = ['reset'];\n      var next = Git.trailingFunctionArgument(arguments);\n      if (next === mode || typeof mode === 'string' || !mode) {\n         var modeStr = ['mixed', 'soft', 'hard'].includes(mode) ? mode : 'soft';\n         command.push('--' + modeStr);\n      }\n      else if (Array.isArray(mode)) {\n         command.push.apply(command, mode);\n      }\n\n      return this._run(command, function (err) {\n         next && next(err || null);\n      });\n   };\n\n   /**\n    * Revert one or more commits in the local working copy\n    *\n    * @param {string} commit The commit to revert. Can be any hash, offset (eg: `HEAD~2`) or range (eg: `master~5..master~2`)\n    * @param {Object} [options] Optional options object\n    * @param {Function} [then]\n    */\n   Git.prototype.revert = function (commit, options, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = ['revert'];\n\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      if (typeof commit !== 'string') {\n         return this.exec(function () {\n            next && next(new TypeError(\"Commit must be a string\"));\n         });\n      }\n\n      command.push(commit);\n      return this._run(command, function (err) {\n         next && next(err || null);\n      });\n   };\n\n   /**\n    * Add a lightweight tag to the head of the current branch\n    *\n    * @param {string} name\n    * @param {Function} [then]\n    */\n   Git.prototype.addTag = function (name, then) {\n      if (typeof name !== \"string\") {\n         return this.exec(function () {\n            then && then(new TypeError(\"Git.addTag requires a tag name\"));\n         });\n      }\n\n      return this.tag([name], then);\n   };\n\n   /**\n    * Add an annotated tag to the head of the current branch\n    *\n    * @param {string} tagName\n    * @param {string} tagMessage\n    * @param {Function} [then]\n    */\n   Git.prototype.addAnnotatedTag = function (tagName, tagMessage, then) {\n      return this.tag(['-a', '-m', tagMessage, tagName], function (err) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Check out a tag or revision, any number of additional arguments can be passed to the `git checkout` command\n    * by supplying either a string or array of strings as the `what` parameter.\n    *\n    * @param {string|string[]} what One or more commands to pass to `git checkout`\n    * @param {Function} [then]\n    */\n   Git.prototype.checkout = function (what, then) {\n      var command = ['checkout'];\n      command = command.concat(what);\n\n      return this._run(command, function (err, data) {\n         then && then(err, !err && this._parseCheckout(data));\n      });\n   };\n\n   /**\n    * Check out a remote branch\n    *\n    * @param {string} branchName name of branch\n    * @param {string} startPoint (e.g origin/development)\n    * @param {Function} [then]\n    */\n   Git.prototype.checkoutBranch = function (branchName, startPoint, then) {\n      return this.checkout(['-b', branchName, startPoint], then);\n   };\n\n   /**\n    * Check out a local branch\n    *\n    * @param {string} branchName of branch\n    * @param {Function} [then]\n    */\n   Git.prototype.checkoutLocalBranch = function (branchName, then) {\n      return this.checkout(['-b', branchName], then);\n   };\n\n   /**\n    * Delete a local branch\n    *\n    * @param {string} branchName name of branch\n    * @param {Function} [then]\n    */\n   Git.prototype.deleteLocalBranch = function (branchName, then) {\n      return this.branch(['-d', branchName], then);\n   };\n\n   /**\n    * List all branches\n    *\n    * @param {Object | string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.branch = function (options, then) {\n      var isDelete, responseHandler;\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = ['branch'];\n      if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n      if (!arguments.length || next === options) {\n         command.push('-a');\n      }\n\n      isDelete = ['-d', '-D', '--delete'].reduce(function (isDelete, flag) {\n         return isDelete || command.indexOf(flag) > 0;\n      }, false);\n\n      if (command.indexOf('-v') < 0) {\n         command.splice(1, 0, '-v');\n      }\n\n      responseHandler = isDelete\n         ? Git._responseHandler(next, 'BranchDeleteSummary', false)\n         : Git._responseHandler(next, 'BranchSummary');\n\n      return this._run(command, responseHandler);\n   };\n\n   /**\n    * Return list of local branches\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.branchLocal = function (then) {\n      return this.branch(['-v'], then);\n   };\n\n   /**\n    * Add config to local git instance\n    *\n    * @param {string} key configuration key (e.g user.name)\n    * @param {string} value for the given key (e.g your name)\n    * @param {Function} [then]\n    */\n   Git.prototype.addConfig = function (key, value, then) {\n      return this._run(['config', '--local', key, value], function (err, data) {\n         then && then(err, !err && data);\n      });\n   };\n\n   /**\n    * Executes any command against the git binary.\n    *\n    * @param {string[]|Object} commands\n    * @param {Function} [then]\n    *\n    * @returns {Git}\n    */\n   Git.prototype.raw = function (commands, then) {\n      var command = [];\n      if (Array.isArray(commands)) {\n         command = commands.slice(0);\n      }\n      else {\n         Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n      }\n\n      var next = Git.trailingFunctionArgument(arguments);\n\n      if (!command.length) {\n         return this.exec(function () {\n            next && next(new Error('Raw: must supply one or more command to execute'), null);\n         });\n      }\n\n      return this._run(command, function (err, data) {\n         next && next(err, !err && data || null);\n      });\n   };\n\n   /**\n    * Add a submodule\n    *\n    * @param {string} repo\n    * @param {string} path\n    * @param {Function} [then]\n    */\n   Git.prototype.submoduleAdd = function (repo, path, then) {\n      return this._run(['submodule', 'add', repo, path], function (err) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Update submodules\n    *\n    * @param {string[]} [args]\n    * @param {Function} [then]\n    */\n   Git.prototype.submoduleUpdate = function (args, then) {\n      if (typeof args === 'string') {\n         this._getLog('warn', 'Git#submoduleUpdate: args should be supplied as an array of individual arguments');\n      }\n\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = (args !== next) ? args : [];\n\n      return this.subModule(['update'].concat(command), function (err, args) {\n         next && next(err, args);\n      });\n   };\n\n   /**\n    * Initialize submodules\n    *\n    * @param {string[]} [args]\n    * @param {Function} [then]\n    */\n   Git.prototype.submoduleInit = function (args, then) {\n      if (typeof args === 'string') {\n         this._getLog('warn', 'Git#submoduleInit: args should be supplied as an array of individual arguments');\n      }\n\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = (args !== next) ? args : [];\n\n      return this.subModule(['init'].concat(command), function (err, args) {\n         next && next(err, args);\n      });\n   };\n\n   /**\n    * Call any `git submodule` function with arguments passed as an array of strings.\n    *\n    * @param {string[]} options\n    * @param {Function} [then]\n    */\n   Git.prototype.subModule = function (options, then) {\n      if (!Array.isArray(options)) {\n         return this.exec(function () {\n            then && then(new TypeError(\"Git.subModule requires an array of arguments\"));\n         });\n      }\n\n      if (options[0] !== 'submodule') {\n         options.unshift('submodule');\n      }\n\n      return this._run(options, function (err, data) {\n         then && then(err || null, err ? null : data);\n      });\n   };\n\n   /**\n    * List remote\n    *\n    * @param {string[]} [args]\n    * @param {Function} [then]\n    */\n   Git.prototype.listRemote = function (args, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var data = next === args || args === undefined ? [] : args;\n\n      if (typeof data === 'string') {\n         this._getLog('warn', 'Git#listRemote: args should be supplied as an array of individual arguments');\n      }\n\n      return this._run(['ls-remote'].concat(data), function (err, data) {\n         next && next(err, data);\n      });\n   };\n\n   /**\n    * Adds a remote to the list of remotes.\n    *\n    * @param {string} remoteName Name of the repository - eg \"upstream\"\n    * @param {string} remoteRepo Fully qualified SSH or HTTP(S) path to the remote repo\n    * @param {Function} [then]\n    * @returns {*}\n    */\n   Git.prototype.addRemote = function (remoteName, remoteRepo, then) {\n      return this._run(['remote', 'add', remoteName, remoteRepo], function (err) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Removes an entry from the list of remotes.\n    *\n    * @param {string} remoteName Name of the repository - eg \"upstream\"\n    * @param {Function} [then]\n    * @returns {*}\n    */\n   Git.prototype.removeRemote = function (remoteName, then) {\n      return this._run(['remote', 'remove', remoteName], function (err) {\n         then && then(err);\n      });\n   };\n\n   /**\n    * Gets the currently available remotes, setting the optional verbose argument to true includes additional\n    * detail on the remotes themselves.\n    *\n    * @param {boolean} [verbose=false]\n    * @param {Function} [then]\n    */\n   Git.prototype.getRemotes = function (verbose, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var args = verbose === true ? ['-v'] : [];\n\n      return this.remote(args, function (err, data) {\n         next && next(err, !err && function () {\n            return data.trim().split('\\n').filter(Boolean).reduce(function (remotes, remote) {\n               var detail = remote.trim().split(/\\s+/);\n               var name = detail.shift();\n\n               if (!remotes[name]) {\n                  remotes[name] = remotes[remotes.length] = {\n                     name: name,\n                     refs: {}\n                  };\n               }\n\n               if (detail.length) {\n                  remotes[name].refs[detail.pop().replace(/[^a-z]/g, '')] = detail.pop();\n               }\n\n               return remotes;\n            }, []).slice(0);\n         }());\n      });\n   };\n\n   /**\n    * Call any `git remote` function with arguments passed as an array of strings.\n    *\n    * @param {string[]} options\n    * @param {Function} [then]\n    */\n   Git.prototype.remote = function (options, then) {\n      if (!Array.isArray(options)) {\n         return this.exec(function () {\n            then && then(new TypeError(\"Git.remote requires an array of arguments\"));\n         });\n      }\n\n      if (options[0] !== 'remote') {\n         options.unshift('remote');\n      }\n\n      return this._run(options, function (err, data) {\n         then && then(err || null, err ? null : data);\n      });\n   };\n\n   /**\n    * Merges from one branch to another, equivalent to running `git merge ${from} $[to}`, the `options` argument can\n    * either be an array of additional parameters to pass to the command or null / omitted to be ignored.\n    *\n    * @param {string} from\n    * @param {string} to\n    * @param {string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.mergeFromTo = function (from, to, options, then) {\n      var commands = [\n         from,\n         to\n      ];\n      var callback = Git.trailingFunctionArgument(arguments);\n\n      if (Array.isArray(options)) {\n         commands = commands.concat(options);\n      }\n\n      return this.merge(commands, callback);\n   };\n\n   /**\n    * Runs a merge, `options` can be either an array of arguments\n    * supported by the [`git merge`](https://git-scm.com/docs/git-merge)\n    * or an options object.\n    *\n    * Conflicts during the merge result in an error response,\n    * the response type whether it was an error or success will be a MergeSummary instance.\n    * When successful, the MergeSummary has all detail from a the PullSummary\n    *\n    * @param {Object | string[]} [options]\n    * @param {Function} [then]\n    * @returns {*}\n    *\n    * @see ./responses/MergeSummary.js\n    * @see ./responses/PullSummary.js\n    */\n   Git.prototype.merge = function (options, then) {\n      var self = this;\n      var userHandler = Git.trailingFunctionArgument(arguments) || NOOP;\n      var mergeHandler = function (err, mergeSummary) {\n         if (!err && mergeSummary.failed) {\n            return Git.fail(self, mergeSummary, userHandler);\n         }\n\n         userHandler(err, mergeSummary);\n      };\n\n      var command = [];\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n      command.push.apply(command, Git.trailingArrayArgument(arguments));\n\n      if (command[0] !== 'merge') {\n         command.unshift('merge');\n      }\n\n      if (command.length === 1) {\n         return this.exec(function () {\n            then && then(new TypeError(\"Git.merge requires at least one option\"));\n         });\n      }\n\n      return this._run(command, Git._responseHandler(mergeHandler, 'MergeSummary'), {\n         concatStdErr: true\n      });\n   };\n\n   /**\n    * Call any `git tag` function with arguments passed as an array of strings.\n    *\n    * @param {string[]} options\n    * @param {Function} [then]\n    */\n   Git.prototype.tag = function (options, then) {\n      if (!Array.isArray(options)) {\n         return this.exec(function () {\n            then && then(new TypeError(\"Git.tag requires an array of arguments\"));\n         });\n      }\n\n      if (options[0] !== 'tag') {\n         options.unshift('tag');\n      }\n\n      return this._run(options, function (err, data) {\n         then && then(err || null, err ? null : data);\n      });\n   };\n\n   /**\n    * Updates repository server info\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.updateServerInfo = function (then) {\n      return this._run([\"update-server-info\"], function (err, data) {\n         then && then(err, !err && data);\n      });\n   };\n\n   /**\n    * Pushes the current committed changes to a remote, optionally specify the names of the remote and branch to use\n    * when pushing. Supply multiple options as an array of strings in the first argument - see examples below.\n    *\n    * @param {string|string[]} [remote]\n    * @param {string} [branch]\n    * @param {Function} [then]\n    */\n   Git.prototype.push = function (remote, branch, then) {\n      var command = [];\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      if (typeof remote === 'string' && typeof branch === 'string') {\n         command.push(remote, branch);\n      }\n\n      if (Array.isArray(remote)) {\n         command = command.concat(remote);\n      }\n\n      Git._appendOptions(command, Git.trailingOptionsArgument(arguments));\n\n      if (command[0] !== 'push') {\n         command.unshift('push');\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && data);\n      });\n   };\n\n   /**\n    * Pushes the current tag changes to a remote which can be either a URL or named remote. When not specified uses the\n    * default configured remote spec.\n    *\n    * @param {string} [remote]\n    * @param {Function} [then]\n    */\n   Git.prototype.pushTags = function (remote, then) {\n      var command = ['push'];\n      if (typeof remote === \"string\") {\n         command.push(remote);\n      }\n      command.push('--tags');\n\n      then = typeof arguments[arguments.length - 1] === \"function\" ? arguments[arguments.length - 1] : null;\n\n      return this._run(command, function (err, data) {\n         then && then(err, !err && data);\n      });\n   };\n\n   /**\n    * Removes the named files from source control.\n    *\n    * @param {string|string[]} files\n    * @param {Function} [then]\n    */\n   Git.prototype.rm = function (files, then) {\n      return this._rm(files, '-f', then);\n   };\n\n   /**\n    * Removes the named files from source control but keeps them on disk rather than deleting them entirely. To\n    * completely remove the files, use `rm`.\n    *\n    * @param {string|string[]} files\n    * @param {Function} [then]\n    */\n   Git.prototype.rmKeepLocal = function (files, then) {\n      return this._rm(files, '--cached', then);\n   };\n\n   /**\n    * Returns a list of objects in a tree based on commit hash. Passing in an object hash returns the object's content,\n    * size, and type.\n    *\n    * Passing \"-p\" will instruct cat-file to determine the object type, and display its formatted contents.\n    *\n    * @param {string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.catFile = function (options, then) {\n      return this._catFile('utf-8', arguments);\n   };\n\n   /**\n    * Equivalent to `catFile` but will return the native `Buffer` of content from the git command's stdout.\n    *\n    * @param {string[]} options\n    * @param then\n    */\n   Git.prototype.binaryCatFile = function (options, then) {\n      return this._catFile('buffer', arguments);\n   };\n\n   Git.prototype._catFile = function (format, args) {\n      var handler = Git.trailingFunctionArgument(args);\n      var command = ['cat-file'];\n      var options = args[0];\n\n      if (typeof options === 'string') {\n         throw new TypeError('Git#catFile: options must be supplied as an array of strings');\n      }\n      else if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, data);\n      }, {\n         format: format\n      });\n   };\n\n   /**\n    * Return repository changes.\n    *\n    * @param {string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.diff = function (options, then) {\n      var command = ['diff'];\n\n      if (typeof options === 'string') {\n         command[0] += ' ' + options;\n         this._getLog('warn',\n            'Git#diff: supplying options as a single string is now deprecated, switch to an array of strings');\n      }\n      else if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      if (typeof arguments[arguments.length - 1] === 'function') {\n         then = arguments[arguments.length - 1];\n      }\n\n      return this._run(command, function (err, data) {\n         then && then(err, data);\n      });\n   };\n\n   Git.prototype.diffSummary = function (options, then) {\n      var next = Git.trailingFunctionArgument(arguments);\n      var command = ['--stat=4096'];\n\n      if (options && options !== next) {\n         command.push.apply(command, [].concat(options));\n      }\n\n      return this.diff(command, Git._responseHandler(next, 'DiffSummary'));\n   };\n\n   /**\n    * Wraps `git rev-parse`. Primarily used to convert friendly commit references (ie branch names) to SHA1 hashes.\n    *\n    * Options should be an array of string options compatible with the `git rev-parse`\n    *\n    * @param {string|string[]} [options]\n    * @param {Function} [then]\n    *\n    * @see http://git-scm.com/docs/git-rev-parse\n    */\n   Git.prototype.revparse = function (options, then) {\n      var command = ['rev-parse'];\n\n      if (typeof options === 'string') {\n         command = command + ' ' + options;\n         this._getLog('warn',\n            'Git#revparse: supplying options as a single string is now deprecated, switch to an array of strings');\n      }\n      else if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      if (typeof arguments[arguments.length - 1] === 'function') {\n         then = arguments[arguments.length - 1];\n      }\n\n      return this._run(command, function (err, data) {\n         then && then(err, data);\n      });\n   };\n\n   /**\n    * Show various types of objects, for example the file at a certain commit\n    *\n    * @param {string[]} [options]\n    * @param {Function} [then]\n    */\n   Git.prototype.show = function (options, then) {\n      var args = [].slice.call(arguments, 0);\n      var handler = typeof args[args.length - 1] === \"function\" ? args.pop() : null;\n      var command = ['show'];\n      if (typeof options === 'string') {\n         command = command + ' ' + options;\n         this._getLog('warn',\n            'Git#show: supplying options as a single string is now deprecated, switch to an array of strings');\n      }\n      else if (Array.isArray(options)) {\n         command.push.apply(command, options);\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && data);\n      });\n   };\n\n   /**\n    * @param {string} mode Required parameter \"n\" or \"f\"\n    * @param {string[]} options\n    * @param {Function} [then]\n    */\n   Git.prototype.clean = function (mode, options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n\n      if (typeof mode !== 'string' || !/[nf]/.test(mode)) {\n         return this.exec(function () {\n            handler && handler(new TypeError('Git clean mode parameter (\"n\" or \"f\") is required'));\n         });\n      }\n\n      if (/[^dfinqxX]/.test(mode)) {\n         return this.exec(function () {\n            handler && handler(new TypeError('Git clean unknown option found in ' + JSON.stringify(mode)));\n         });\n      }\n\n      var command = ['clean', '-' + mode];\n      if (Array.isArray(options)) {\n         command = command.concat(options);\n      }\n\n      if (command.some(interactiveMode)) {\n         return this.exec(function () {\n            handler && handler(new TypeError('Git clean interactive mode is not supported'));\n         });\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && data);\n      });\n\n      function interactiveMode (option) {\n         if (/^-[^\\-]/.test(option)) {\n            return option.indexOf('i') > 0;\n         }\n\n         return option === '--interactive';\n      }\n   };\n\n   /**\n    * Call a simple function at the next step in the chain.\n    * @param {Function} [then]\n    */\n   Git.prototype.exec = function (then) {\n      this._run([], function () {\n         typeof then === 'function' && then();\n      });\n      return this;\n   };\n\n   /**\n    * Deprecated means of adding a regular function call at the next step in the chain. Use the replacement\n    * Git#exec, the Git#then method will be removed in version 2.x\n    *\n    * @see exec\n    * @deprecated\n    */\n   Git.prototype.then = function (then) {\n      this._getLog(\n         'warn',\n         \"\\nGit#then is deprecated after version 1.72 and will be removed in version 2.x\"\n         + \"\\nPlease switch to using Git#exec to run arbitrary functions as part of the command chain.\\n\"\n      );\n      return this.exec(then);\n   };\n\n   /**\n    * Show commit logs from `HEAD` to the first commit.\n    * If provided between `options.from` and `options.to` tags or branch.\n    *\n    * Additionally you can provide options.file, which is the path to a file in your repository. Then only this file will be considered.\n    *\n    * To use a custom splitter in the log format, set `options.splitter` to be the string the log should be split on.\n    *\n    * Options can also be supplied as a standard options object for adding custom properties supported by the git log command.\n    * For any other set of options, supply options as an array of strings to be appended to the git log command.\n    *\n    * @param {Object|string[]} [options]\n    * @param {string} [options.from] The first commit to include\n    * @param {string} [options.to] The most recent commit to include\n    * @param {string} [options.file] A single file to include in the result\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.log = function (options, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n      var opt = (handler === then ? options : null) || {};\n\n      var splitter = opt.splitter || ';';\n      var format = opt.format || {\n         hash: '%H',\n         date: '%ai',\n         message: '%s%d',\n         author_name: '%aN',\n         author_email: '%ae'\n      };\n\n      var fields = Object.keys(format);\n      var formatstr = fields.map(function (k) {\n         return format[k];\n      }).join(splitter);\n      var command = [\"log\", \"--pretty=format:\" + formatstr + require('./responses/ListLogSummary').COMMIT_BOUNDARY];\n\n      if (Array.isArray(opt)) {\n         command = command.concat(opt);\n         opt = {};\n      }\n      else if (typeof arguments[0] === \"string\" || typeof arguments[1] === \"string\") {\n         this._getLog('warn',\n            'Git#log: supplying to or from as strings is now deprecated, switch to an options configuration object');\n         opt = {\n            from: arguments[0],\n            to: arguments[1]\n         };\n      }\n\n      if (opt.n || opt['max-count']) {\n         command.push(\"--max-count=\" + (opt.n || opt['max-count']));\n      }\n\n      if (opt.from && opt.to) {\n         command.push(opt.from + \"...\" + opt.to);\n      }\n\n      if (opt.file) {\n         command.push(\"--follow\", options.file);\n      }\n\n      'splitter n max-count file from to --pretty format'.split(' ').forEach(function (key) {\n         delete opt[key];\n      });\n\n      Git._appendOptions(command, opt);\n\n      return this._run(command, Git._responseHandler(handler, 'ListLogSummary', [splitter, fields]));\n   };\n\n   /**\n    * Clears the queue of pending commands and returns the wrapper instance for chaining.\n    *\n    * @returns {Git}\n    */\n   Git.prototype.clearQueue = function () {\n      this._runCache.length = 0;\n      return this;\n   };\n\n   /**\n    * Check if a pathname or pathnames are excluded by .gitignore\n    *\n    * @param {string|string[]} pathnames\n    * @param {Function} [then]\n    */\n   Git.prototype.checkIgnore = function (pathnames, then) {\n      var handler = Git.trailingFunctionArgument(arguments);\n      var command = [\"check-ignore\"];\n\n      if (handler !== pathnames) {\n         command = command.concat(pathnames);\n      }\n\n      return this._run(command, function (err, data) {\n         handler && handler(err, !err && this._parseCheckIgnore(data));\n      });\n   };\n\n   /**\n    * Validates that the current repo is a Git repo.\n    *\n    * @param {Function} [then]\n    */\n   Git.prototype.checkIsRepo = function (then) {\n      function onError (exitCode, stdErr, done, fail) {\n         if (exitCode === 128 && /(Not a git repository|Kein Git-Repository)/i.test(stdErr)) {\n            return done(false);\n         }\n\n         fail(stdErr);\n      }\n\n      function handler (err, isRepo) {\n         then && then(err, String(isRepo).trim() === 'true');\n      }\n\n      return this._run(['rev-parse', '--is-inside-work-tree'], handler, {onError: onError});\n   };\n\n   Git.prototype._rm = function (_files, options, then) {\n      var files = [].concat(_files);\n      var args = ['rm', options];\n      args.push.apply(args, files);\n\n      return this._run(args, function (err) {\n         then && then(err);\n      });\n   };\n\n   Git.prototype._parseCheckout = function (checkout) {\n      // TODO\n   };\n\n   /**\n    * Parser for the `check-ignore` command - returns each\n    * @param {string} [files]\n    * @returns {string[]}\n    */\n   Git.prototype._parseCheckIgnore = function (files) {\n      return files.split(/\\n/g).filter(Boolean).map(function (file) {\n         return file.trim()\n      });\n   };\n\n   /**\n    * Schedules the supplied command to be run, the command should not include the name of the git binary and should\n    * be an array of strings passed as the arguments to the git binary.\n    *\n    * @param {string[]} command\n    * @param {Function} then\n    * @param {Object} [opt]\n    * @param {boolean} [opt.concatStdErr=false] Optionally concatenate stderr output into the stdout\n    * @param {boolean} [opt.format=\"utf-8\"] The format to use when reading the content of stdout\n    * @param {Function} [opt.onError] Optional error handler for this command - can be used to allow non-clean exits\n    *                                  without killing the remaining stack of commands\n    * @param {number} [opt.onError.exitCode]\n    * @param {string} [opt.onError.stdErr]\n    *\n    * @returns {Git}\n    */\n   Git.prototype._run = function (command, then, opt) {\n      if (typeof command === \"string\") {\n         command = command.split(\" \");\n      }\n      this._runCache.push([command, then, opt || {}]);\n      this._schedule();\n\n      return this;\n   };\n\n   Git.prototype._schedule = function () {\n      if (!this._childProcess && this._runCache.length) {\n         var git = this;\n         var Buffer = git.Buffer;\n         var task = git._runCache.shift();\n\n         var command = task[0];\n         var then = task[1];\n         var options = task[2];\n\n         debug(command);\n\n         var result = deferred();\n\n         var attempted = false;\n         var attemptClose = function attemptClose (e) {\n\n            // closing when there is content, terminate immediately\n            if (attempted || stdErr.length || stdOut.length) {\n               result.resolve(e);\n               attempted = true;\n            }\n\n            // first attempt at closing but no content yet, wait briefly for the close/exit that may follow\n            if (!attempted) {\n               attempted = true;\n               setTimeout(attemptClose.bind(this, e), 50);\n            }\n\n         };\n\n         var stdOut = [];\n         var stdErr = [];\n         var spawned = git.ChildProcess.spawn(git._command, command.slice(0), {\n            cwd: git._baseDir,\n            env: git._env\n         });\n\n         spawned.stdout.on('data', function (buffer) {\n            stdOut.push(buffer);\n         });\n\n         spawned.stderr.on('data', function (buffer) {\n            stdErr.push(buffer);\n         });\n\n         spawned.on('error', function (err) {\n            stdErr.push(new Buffer(err.stack, 'ascii'));\n         });\n\n         spawned.on('close', attemptClose);\n         spawned.on('exit', attemptClose);\n\n         result.promise.then(function (exitCode) {\n            function done (output) {\n               then.call(git, null, output);\n            }\n\n            function fail (error) {\n               Git.fail(git, error, then);\n            }\n\n            delete git._childProcess;\n\n            if (exitCode && stdErr.length && options.onError) {\n               options.onError(exitCode, Buffer.concat(stdErr).toString('utf-8'), done, fail);\n            }\n            else if (exitCode && stdErr.length) {\n               fail(Buffer.concat(stdErr).toString('utf-8'));\n            }\n            else {\n               if (options.concatStdErr) {\n                  [].push.apply(stdOut, stdErr);\n               }\n\n               var stdOutput = Buffer.concat(stdOut);\n               if (options.format !== 'buffer') {\n                  stdOutput = stdOutput.toString(options.format || 'utf-8');\n               }\n\n               done(stdOutput);\n            }\n\n            process.nextTick(git._schedule.bind(git));\n         });\n\n         git._childProcess = spawned;\n\n         if (git._outputHandler) {\n            git._outputHandler(command[0], git._childProcess.stdout, git._childProcess.stderr);\n         }\n      }\n   };\n\n   /**\n    * Handles an exception in the processing of a command.\n    */\n   Git.fail = function (git, error, handler) {\n      git._getLog('error', error);\n      git._runCache.length = 0;\n      if (typeof handler === 'function') {\n         handler.call(git, error, null);\n      }\n   };\n\n   /**\n    * Given any number of arguments, returns the last argument if it is a function, otherwise returns null.\n    * @returns {Function|null}\n    */\n   Git.trailingFunctionArgument = function (args) {\n      var trailing = args[args.length - 1];\n      return (typeof trailing === \"function\") ? trailing : null;\n   };\n\n   /**\n    * Given any number of arguments, returns the trailing options argument, ignoring a trailing function argument\n    * if there is one. When not found, the return value is null.\n    * @returns {Object|null}\n    */\n   Git.trailingOptionsArgument = function (args) {\n      var options = args[(args.length - (Git.trailingFunctionArgument(args) ? 2 : 1))];\n      return Object.prototype.toString.call(options) === '[object Object]' ? options : null;\n   };\n\n   /**\n    * Given any number of arguments, returns the trailing options array argument, ignoring a trailing function argument\n    * if there is one. When not found, the return value is an empty array.\n    * @returns {Array}\n    */\n   Git.trailingArrayArgument = function (args) {\n      var options = args[(args.length - (Git.trailingFunctionArgument(args) ? 2 : 1))];\n      return Object.prototype.toString.call(options) === '[object Array]' ? options : [];\n   };\n\n   /**\n    * Mutates the supplied command array by merging in properties in the options object. When the\n    * value of the item in the options object is a string it will be concatenated to the key as\n    * a single `name=value` item, otherwise just the name will be used.\n    *\n    * @param {string[]} command\n    * @param {Object} options\n    * @private\n    */\n   Git._appendOptions = function (command, options) {\n      if (options === null) {\n         return;\n      }\n\n      Object.keys(options).forEach(function (key) {\n         var value = options[key];\n         if (typeof value === 'string') {\n            command.push(key + '=' + value);\n         }\n         else {\n            command.push(key);\n         }\n      });\n   };\n\n   /**\n    * Given the type of response and the callback to receive the parsed response,\n    * uses the correct parser and calls back the callback.\n    *\n    * @param {Function} callback\n    * @param {string} type\n    * @param {Object[]} [args]\n    *\n    * @private\n    */\n   Git._responseHandler = function (callback, type, args) {\n      return function (error, data) {\n         if (typeof callback !== 'function') {\n            return;\n         }\n\n         if (error) {\n            callback(error, null);\n            return;\n         }\n\n         var handler = require('./responses/' + type);\n         var result = handler.parse.apply(handler, [data].concat(args === undefined ? [] : args));\n\n         callback(null, result);\n      };\n\n   };\n\n   /**\n    * Marks the git instance as having had a fatal exception by clearing the pending queue of tasks and\n    * logging to the console.\n    *\n    * @param git\n    * @param error\n    * @param callback\n    */\n   Git.exception = function (git, error, callback) {\n      git._runCache.length = 0;\n      if (typeof callback === 'function') {\n         callback(error instanceof Error ? error : new Error(error));\n      }\n\n      git._getLog('error', error);\n   };\n\n   module.exports = Git;\n\n}());\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","module.exports = require(\"tty\");","module.exports = require(\"util\");","'use strict';\nvar argv = process.argv;\n\nvar terminator = argv.indexOf('--');\nvar hasFlag = function (flag) {\n\tflag = '--' + flag;\n\tvar pos = argv.indexOf(flag);\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\n};\n\nmodule.exports = (function () {\n\tif ('FORCE_COLOR' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n","\nmodule.exports = function deferred () {\n   var d = {};\n   d.promise = new Promise(function (resolve, reject) {\n      d.resolve = resolve;\n      d.reject = reject\n   });\n\n   return d;\n};\n","\nvar fs = require('fs');\n\nfunction exists (path, isFile, isDirectory) {\n   try {\n      var matches = false;\n      var stat = fs.statSync(path);\n\n      matches = matches || isFile && stat.isFile();\n      matches = matches || isDirectory && stat.isDirectory();\n\n      return matches;\n   }\n   catch (e) {\n      if (e.code === 'ENOENT') {\n         return false;\n      }\n\n      throw e;\n   }\n}\n\nmodule.exports = function (path, type) {\n   if (!type) {\n      return exists(path, true, true);\n   }\n\n   return exists(path, type & 1, type & 2);\n};\n\nmodule.exports.FILE = 1;\n\nmodule.exports.FOLDER = 2;\n","module.exports = require(\"fs\");","\nmodule.exports = ListLogSummary;\n\n/**\n * The ListLogSummary is returned as a response to getting `git().log()` or `git().stashList()`\n *\n * @constructor\n */\nfunction ListLogSummary (all) {\n   this.all = all;\n   this.latest = all.length && all[0] || null;\n   this.total = all.length;\n}\n\n/**\n * Detail for each of the log lines\n * @type {ListLogLine[]}\n */\nListLogSummary.prototype.all = null;\n\n/**\n * Most recent entry in the log\n * @type {ListLogLine}\n */\nListLogSummary.prototype.latest = null;\n\n/**\n * Number of items in the log\n * @type {number}\n */\nListLogSummary.prototype.total = 0;\n\nfunction ListLogLine (line, fields) {\n   for (var k = 0; k < fields.length; k++) {\n      this[fields[k]] = line[k];\n   }\n}\n\nListLogSummary.COMMIT_BOUNDARY = '------------------------ >8 ------------------------';\n\nListLogSummary.parse = function (text, splitter, fields) {\n   fields = fields || ['hash', 'date', 'message', 'author_name', 'author_email'];\n   return new ListLogSummary(\n      text\n         .trim()\n         .split(ListLogSummary.COMMIT_BOUNDARY + '\\n')\n         .map(function (item) {\n            return item.replace(ListLogSummary.COMMIT_BOUNDARY, '')\n         })\n         .filter(Boolean)\n         .map(function (item) {\n            return new ListLogLine(item.trim().split(splitter), fields);\n         })\n   );\n};\n","var map = {\n\t\"./BranchDeleteSummary\": 21,\n\t\"./BranchDeleteSummary.js\": 21,\n\t\"./BranchSummary\": 22,\n\t\"./BranchSummary.js\": 22,\n\t\"./CommitSummary\": 23,\n\t\"./CommitSummary.js\": 23,\n\t\"./DiffSummary\": 24,\n\t\"./DiffSummary.js\": 24,\n\t\"./FetchSummary\": 25,\n\t\"./FetchSummary.js\": 25,\n\t\"./FileStatusSummary\": 26,\n\t\"./FileStatusSummary.js\": 26,\n\t\"./ListLogSummary\": 19,\n\t\"./ListLogSummary.js\": 19,\n\t\"./MergeSummary\": 27,\n\t\"./MergeSummary.js\": 27,\n\t\"./MoveSummary\": 29,\n\t\"./MoveSummary.js\": 29,\n\t\"./PullSummary\": 28,\n\t\"./PullSummary.js\": 28,\n\t\"./StatusSummary\": 30,\n\t\"./StatusSummary.js\": 30,\n\t\"./TagList\": 31,\n\t\"./TagList.js\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","\nmodule.exports = BranchDeletion;\n\nfunction BranchDeletion (branch, hash) {\n   this.branch = branch;\n   this.hash = hash;\n   this.success = hash !== null;\n}\n\nBranchDeletion.deleteSuccessRegex = /(\\S+)\\s+\\(\\S+\\s([^\\)]+)\\)/;\nBranchDeletion.deleteErrorRegex = /^error[^']+'([^']+)'/;\n\nBranchDeletion.parse = function (data, asArray) {\n   var result;\n   var branchDeletions = data.trim().split('\\n').map(function (line) {\n         if (result = BranchDeletion.deleteSuccessRegex.exec(line)) {\n            return new BranchDeletion(result[1], result[2]);\n         }\n         else if (result = BranchDeletion.deleteErrorRegex.exec(line)) {\n            return new BranchDeletion(result[1], null);\n         }\n      })\n      .filter(Boolean);\n\n   return asArray ? branchDeletions : branchDeletions.pop();\n};\n","\nmodule.exports = BranchSummary;\n\nfunction BranchSummary () {\n   this.detached = false;\n   this.current = '';\n   this.all = [];\n   this.branches = {};\n}\n\nBranchSummary.prototype.push = function (current, detached, name, commit, label) {\n   if (current) {\n      this.detached = detached;\n      this.current = name;\n   }\n   this.all.push(name);\n   this.branches[name] = {\n      current: current,\n      name: name,\n      commit: commit,\n      label: label\n   };\n};\n\nBranchSummary.detachedRegex = /^(\\*?\\s+)\\((?:HEAD )?detached (?:from|at) (\\S+)\\)\\s+([a-z0-9]+)\\s(.*)$/;\nBranchSummary.branchRegex = /^(\\*?\\s+)(\\S+)\\s+([a-z0-9]+)\\s(.*)$/;\n\nBranchSummary.parse = function (commit) {\n   var branchSummary = new BranchSummary();\n\n   commit.split('\\n')\n      .forEach(function (line) {\n         var detached = true;\n         var branch = BranchSummary.detachedRegex.exec(line);\n         if (!branch) {\n            detached = false;\n            branch = BranchSummary.branchRegex.exec(line);\n         }\n\n         if (branch) {\n            branchSummary.push(\n               branch[1].charAt(0) === '*',\n               detached,\n               branch[2],\n               branch[3],\n               branch[4]\n            );\n         }\n      });\n\n   return branchSummary;\n};\n","\nmodule.exports = CommitSummary;\n\nfunction CommitSummary () {\n   this.branch = '';\n   this.commit = '';\n   this.summary = {\n      changes: 0,\n      insertions: 0,\n      deletions: 0\n   };\n   this.author = null;\n}\n\nvar COMMIT_BRANCH_MESSAGE_REGEX = /\\[([^\\s]+) ([^\\]]+)/;\nvar COMMIT_AUTHOR_MESSAGE_REGEX = /\\s*Author:\\s(.+)/i;\n\nfunction setBranchFromCommit (commitSummary, commitData) {\n   if (commitData) {\n      commitSummary.branch = commitData[1];\n      commitSummary.commit = commitData[2];\n   }\n}\n\nfunction setSummaryFromCommit (commitSummary, commitData) {\n   if (commitSummary.branch && commitData) {\n      commitSummary.summary.changes = commitData[1] || 0;\n      commitSummary.summary.insertions = commitData[2] || 0;\n      commitSummary.summary.deletions = commitData[3] || 0;\n   }\n}\n\nfunction setAuthorFromCommit (commitSummary, commitData) {\n   var parts = commitData[1].split('<');\n   var email = parts.pop();\n\n   if (email.indexOf('@') <= 0) {\n      return;\n   }\n\n   commitSummary.author = {\n      email: email.substr(0, email.length - 1),\n      name: parts.join('<').trim()\n   };\n}\n\nCommitSummary.parse = function (commit) {\n   var lines = commit.trim().split('\\n');\n   var commitSummary = new CommitSummary();\n\n   setBranchFromCommit(commitSummary, COMMIT_BRANCH_MESSAGE_REGEX.exec(lines.shift()));\n\n   if (COMMIT_AUTHOR_MESSAGE_REGEX.test(lines[0])) {\n      setAuthorFromCommit(commitSummary, COMMIT_AUTHOR_MESSAGE_REGEX.exec(lines.shift()));\n   }\n\n   setSummaryFromCommit(commitSummary, /(\\d+)[^,]*(?:,\\s*(\\d+)[^,]*)?(?:,\\s*(\\d+))?/g.exec(lines.shift()));\n\n   return commitSummary;\n};\n","\nmodule.exports = DiffSummary;\n\n/**\n * The DiffSummary is returned as a response to getting `git().status()`\n *\n * @constructor\n */\nfunction DiffSummary () {\n   this.files = [];\n   this.insertions = 0;\n   this.deletions = 0;\n}\n\n/**\n * Number of lines added\n * @type {number}\n */\nDiffSummary.prototype.insertions = 0;\n\n/**\n * Number of lines deleted\n * @type {number}\n */\nDiffSummary.prototype.deletions = 0;\n\nDiffSummary.parse = function (text) {\n   var line, handler;\n\n   var lines = text.trim().split('\\n');\n   var status = new DiffSummary();\n\n   var summary = lines.pop();\n   if (summary) {\n      summary.trim().split(', ').slice(1).forEach(function (text) {\n         var summary = /(\\d+)\\s([a-z]+)/.exec(text);\n         if (summary) {\n            status[summary[2].replace(/s$/, '') + 's'] = parseInt(summary[1], 10);\n         }\n      });\n   }\n\n   while (line = lines.shift()) {\n      textFileChange(line, status.files) || binaryFileChange(line, status.files);\n   }\n\n   return status;\n};\n\nfunction textFileChange (line, files) {\n   line = line.trim().match(/^(.+)\\s+\\|\\s+(\\d+)\\s+([+\\-]+)$/);\n   if (line) {\n      files.push({\n         file: line[1].trim(),\n         changes: parseInt(line[2], 10),\n         insertions: line[3].replace(/\\-/g, '').length,\n         deletions: line[3].replace(/\\+/g, '').length,\n         binary: false\n      });\n\n      return true;\n   }\n}\n\nfunction binaryFileChange (line, files) {\n   line = line.match(/^(.+) \\| Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)$/);\n   if (line) {\n      files.push({\n         file: line[1].trim(),\n         before: +line[2],\n         after: +line[3],\n         binary: true\n      });\n      return true;\n   }\n}\n","'use strict';\n\nfunction FetchSummary (raw) {\n   this.raw = raw;\n\n   this.remote = null;\n   this.branches = [];\n   this.tags = [];\n}\n\nFetchSummary.parsers = [\n   [\n      /From (.+)$/, function (fetchSummary, matches) {\n         fetchSummary.remote = matches[0];\n      }\n   ],\n   [\n      /\\* \\[new branch\\]\\s+(\\S+)\\s*\\-> (.+)$/, function (fetchSummary, matches) {\n         fetchSummary.branches.push({\n            name: matches[0],\n            tracking: matches[1]\n         });\n      }\n   ],\n   [\n      /\\* \\[new tag\\]\\s+(\\S+)\\s*\\-> (.+)$/, function (fetchSummary, matches) {\n         fetchSummary.tags.push({\n            name: matches[0],\n            tracking: matches[1]\n         });\n      }\n   ]\n];\n\nFetchSummary.parse = function (data) {\n   var fetchSummary = new FetchSummary(data);\n\n   String(data)\n      .trim()\n      .split('\\n')\n      .forEach(function (line) {\n         var original = line.trim();\n         FetchSummary.parsers.some(function (parser) {\n            var parsed = parser[0].exec(original);\n            if (parsed) {\n               parser[1](fetchSummary, parsed.slice(1));\n               return true;\n            }\n         });\n      });\n\n   return fetchSummary;\n};\n\nmodule.exports = FetchSummary;\n","'use strict';\n\nfunction FileStatusSummary (path, index, working_dir) {\n   this.path = path;\n   this.index = index;\n   this.working_dir = working_dir;\n\n   if ('R' === index + working_dir) {\n      var detail = FileStatusSummary.fromPathRegex.exec(path) || [null, path, path];\n      this.from = detail[1];\n      this.path = detail[2];\n   }\n}\n\nFileStatusSummary.fromPathRegex = /^(.+) -> (.+)$/;\n\nFileStatusSummary.prototype = {\n   path: '',\n   from: ''\n};\n\nmodule.exports = FileStatusSummary;\n","'use strict';\nmodule.exports = MergeSummary;\n\nvar PullSummary = require('./PullSummary');\n\nfunction MergeConflict (reason, file) {\n   this.reason = reason;\n   this.file = file;\n}\n\nMergeConflict.prototype.toString = function () {\n   return this.file + ':' + this.reason;\n};\n\nfunction MergeSummary () {\n   PullSummary.call(this);\n\n   this.conflicts = [];\n   this.merges = [];\n}\n\nMergeSummary.prototype = Object.create(PullSummary.prototype);\n\nMergeSummary.prototype.result = 'success';\n\nMergeSummary.prototype.toString = function () {\n   if (this.conflicts.length) {\n      return 'CONFLICTS: ' + this.conflicts.join(', ');\n   }\n   return 'OK';\n};\n\nObject.defineProperty(MergeSummary.prototype, 'failed', {\n   get: function () {\n      return this.conflicts.length > 0;\n   }\n});\n\nMergeSummary.parsers = [\n   {\n      test: /^Auto-merging\\s+(.+)$/,\n      handle: function (result, mergeSummary) {\n         mergeSummary.merges.push(result[1]);\n      }\n   },\n   {\n      test: /^CONFLICT\\s+\\((.+)\\).+ in (.+)$/,\n      handle: function (result, mergeSummary) {\n         mergeSummary.conflicts.push(new MergeConflict(result[1], result[2]));\n      }\n   },\n   {\n      test: /^Automatic merge failed;\\s+(.+)$/,\n      handle: function (result, mergeSummary) {\n         mergeSummary.reason = result[1];\n      }\n   }\n];\n\nMergeSummary.parse = function (output) {\n   let mergeSummary = new MergeSummary();\n\n   output.trim().split('\\n').forEach(function (line) {\n      for (var i = 0, iMax = MergeSummary.parsers.length; i < iMax; i++) {\n         let parser = MergeSummary.parsers[i];\n\n         var result = parser.test.exec(line);\n         if (result) {\n            parser.handle(result, mergeSummary);\n            break;\n         }\n      }\n   });\n\n   let pullSummary = PullSummary.parse(output);\n   if (pullSummary.summary.changes) {\n      Object.assign(mergeSummary, pullSummary);\n   }\n\n   return mergeSummary;\n};\n","\nmodule.exports = PullSummary;\n\n/**\n * The PullSummary is returned as a response to getting `git().pull()`\n *\n * @constructor\n */\nfunction PullSummary () {\n   this.files = [];\n   this.insertions = {};\n   this.deletions = {};\n\n   this.summary = {\n      changes: 0,\n      insertions: 0,\n      deletions: 0\n   };\n\n   this.created = [];\n   this.deleted = [];\n}\n\n/**\n * Array of files that were created\n * @type {string[]}\n */\nPullSummary.prototype.created = null;\n\n/**\n * Array of files that were deleted\n * @type {string[]}\n */\nPullSummary.prototype.deleted = null;\n\n/**\n * The array of file paths/names that have been modified in any part of the pulled content\n * @type {string[]}\n */\nPullSummary.prototype.files = null;\n\n/**\n * A map of file path to number to show the number of insertions per file.\n * @type {Object}\n */\nPullSummary.prototype.insertions = null;\n\n/**\n * A map of file path to number to show the number of deletions per file.\n * @type {Object}\n */\nPullSummary.prototype.deletions = null;\n\n/**\n * Overall summary of changes/insertions/deletions and the number associated with each\n * across all content that was pulled.\n * @type {Object}\n */\nPullSummary.prototype.summary = null;\n\nPullSummary.FILE_UPDATE_REGEX = /^\\s*(.+?)\\s+\\|\\s+\\d+\\s*(\\+*)(-*)/;\nPullSummary.SUMMARY_REGEX = /(\\d+)\\D+((\\d+)\\D+\\(\\+\\))?(\\D+(\\d+)\\D+\\(-\\))?/;\nPullSummary.ACTION_REGEX = /(create|delete) mode \\d+ (.+)/;\n\nPullSummary.parse = function (text) {\n   var pullSummary = new PullSummary;\n   var lines = text.split('\\n');\n\n   while (lines.length) {\n      var line = lines.shift().trim();\n      if (!line) {\n         continue;\n      }\n\n      update(pullSummary, line) || summary(pullSummary, line) || action(pullSummary, line);\n   }\n\n   return pullSummary;\n};\n\nfunction update (pullSummary, line) {\n\n   var update = PullSummary.FILE_UPDATE_REGEX.exec(line);\n   if (!update) {\n      return false;\n   }\n\n   pullSummary.files.push(update[1]);\n\n   var insertions = update[2].length;\n   if (insertions) {\n      pullSummary.insertions[update[1]] = insertions;\n   }\n\n   var deletions = update[3].length;\n   if (deletions) {\n      pullSummary.deletions[update[1]] = deletions;\n   }\n\n   return true;\n}\n\nfunction summary (pullSummary, line) {\n   if (!pullSummary.files.length) {\n      return false;\n   }\n\n   var update = PullSummary.SUMMARY_REGEX.exec(line);\n   if (!update || (update[3] === undefined && update[5] === undefined)) {\n      return false;\n   }\n\n   pullSummary.summary.changes = +update[1] || 0;\n   pullSummary.summary.insertions = +update[3] || 0;\n   pullSummary.summary.deletions = +update[5] || 0;\n\n   return true;\n}\n\nfunction action (pullSummary, line) {\n\n   var match = PullSummary.ACTION_REGEX.exec(line);\n   if (!match) {\n      return false;\n   }\n\n   var file = match[2];\n\n   if (pullSummary.files.indexOf(file) < 0) {\n      pullSummary.files.push(file);\n   }\n\n   var container = (match[1] === 'create') ? pullSummary.created : pullSummary.deleted;\n   container.push(file);\n\n   return true;\n}\n","\nmodule.exports = MoveSummary;\n\n/**\n * The MoveSummary is returned as a response to getting `git().status()`\n *\n * @constructor\n */\nfunction MoveSummary () {\n   this.moves = [];\n   this.sources = {};\n}\n\nMoveSummary.SUMMARY_REGEX = /^Renaming (.+) to (.+)$/;\n\nMoveSummary.parse = function (text) {\n   var lines = text.split('\\n');\n   var summary = new MoveSummary();\n\n   for (var i = 0, iMax = lines.length, line; i < iMax; i++) {\n      line = MoveSummary.SUMMARY_REGEX.exec(lines[i].trim());\n\n      if (line) {\n         summary.moves.push({\n            from: line[1],\n            to: line[2]\n         });\n      }\n   }\n\n   return summary;\n};\n","\n\n\nvar FileStatusSummary = require('./FileStatusSummary');\n\nmodule.exports = StatusSummary;\n\n/**\n * The StatusSummary is returned as a response to getting `git().status()`\n *\n * @constructor\n */\nfunction StatusSummary () {\n   this.not_added = [];\n   this.conflicted = [];\n   this.created = [];\n   this.deleted = [];\n   this.modified = [];\n   this.renamed = [];\n   this.files = [];\n   this.staged = [];\n}\n\n\n/**\n * Number of commits ahead of the tracked branch\n * @type {number}\n */\nStatusSummary.prototype.ahead = 0;\n\n/**\n * Number of commits behind the tracked branch\n * @type {number}\n */\nStatusSummary.prototype.behind = 0;\n\n/**\n * Name of the current branch\n * @type {null}\n */\nStatusSummary.prototype.current = null;\n\n/**\n * Name of the branch being tracked\n * @type {string}\n */\nStatusSummary.prototype.tracking = null;\n\n/**\n * All files represented as an array of objects containing the `path` and status in `index` and\n * in the `working_dir`.\n *\n * @type {Array}\n */\nStatusSummary.prototype.files = null;\n\n/**\n * Gets whether this StatusSummary represents a clean working branch.\n *\n * @return {boolean}\n */\nStatusSummary.prototype.isClean = function () {\n   return 0 === Object.keys(this).filter(function (name) {\n      return Array.isArray(this[name]) && this[name].length;\n   }, this).length;\n};\n\nStatusSummary.parsers = {\n   '##': function (line, status) {\n      var aheadReg = /ahead (\\d+)/;\n      var behindReg = /behind (\\d+)/;\n      var currentReg = /^(.+?(?=(?:\\.{3}|\\s|$)))/;\n      var trackingReg = /\\.{3}(\\S*)/;\n      var regexResult;\n\n      regexResult = aheadReg.exec(line);\n      status.ahead = regexResult && +regexResult[1] || 0;\n\n      regexResult = behindReg.exec(line);\n      status.behind = regexResult && +regexResult[1] || 0;\n\n      regexResult = currentReg.exec(line);\n      status.current = regexResult && regexResult[1];\n\n      regexResult = trackingReg.exec(line);\n      status.tracking = regexResult && regexResult[1];\n   },\n\n   '??': function (line, status) {\n      status.not_added.push(line);\n   },\n\n   A: function (line, status) {\n      status.created.push(line);\n   },\n\n   AM: function (line, status) {\n      status.created.push(line);\n   },\n\n   D: function (line, status) {\n      status.deleted.push(line);\n   },\n\n   M: function (line, status, indexState) {\n      status.modified.push(line);\n\n      if (indexState === 'M') {\n         status.staged.push(line);\n      }\n   },\n\n   R: function (line, status) {\n      var detail = /^(.+) -> (.+)$/.exec(line) || [null, line, line];\n\n      status.renamed.push({\n         from: detail[1],\n         to: detail[2]\n      });\n   },\n\n   UU: function (line, status) {\n      status.conflicted.push(line);\n   }\n};\n\nStatusSummary.parsers.MM = StatusSummary.parsers.M;\n\nStatusSummary.parse = function (text) {\n   var file, linestr;\n\n   var lines = text.trim().split('\\n');\n   var status = new StatusSummary();\n\n   while (linestr = lines.shift()) {\n      file = splitLine(linestr);\n\n      if (!file) {\n         continue;\n      }\n\n      if (file.handler) {\n         file.handler(file.path, status, file.index, file.workingDir);\n      }\n\n      if (file.code !== '##') {\n         status.files.push(new FileStatusSummary(file.path, file.index, file.workingDir));\n      }\n   }\n\n   return status;\n};\n\n\nfunction splitLine (lineStr) {\n   var line = lineStr.trim().match(/(..?)(\\s+)(.*)/);\n   if (!line || !line[1].trim()) {\n      line = lineStr.trim().match(/(..?)\\s+(.*)/);\n   }\n\n   if (!line) {\n      return;\n   }\n\n   var code = line[1];\n   if (line[2].length > 1) {\n      code += ' ';\n   }\n   if (code.length === 1 && line[2].length === 1) {\n      code = ' ' + code;\n   }\n\n   return {\n      raw: code,\n      code: code.trim(),\n      index: code.charAt(0),\n      workingDir: code.charAt(1),\n      handler: StatusSummary.parsers[code.trim()],\n      path: line[3]\n   };\n}\n","\nmodule.exports = TagList;\n\nfunction TagList (tagList, latest) {\n   this.latest = latest;\n   this.all = tagList\n}\n\nTagList.parse = function (data, customSort) {\n   var number = function (input) {\n      if (typeof input === 'string') {\n         return parseInt(input.replace(/^\\D+/g, ''), 10) || 0;\n      }\n\n      return 0;\n   };\n\n   var tags = data\n      .trim()\n      .split('\\n')\n      .map(function (item) { return item.trim(); })\n      .filter(Boolean);\n\n   if (!customSort) {\n      tags.sort(function (tagA, tagB) {\n         var partsA = tagA.split('.');\n         var partsB = tagB.split('.');\n\n         if (partsA.length === 1 || partsB.length === 1) {\n            return tagA - tagB > 0 ? 1 : -1;\n         }\n\n         for (var i = 0, l = Math.max(partsA.length, partsB.length); i < l; i++) {\n            var a = number(partsA[i]);\n            var b = number(partsB[i]);\n\n            var diff = a - b;\n            if (diff) {\n               return diff > 0 ? 1 : -1;\n            }\n         }\n\n         return 0;\n      });\n   }\n\n   var latest = customSort ? tags[0] : tags.filter(function (tag) { return tag.indexOf('.') >= 0; }).pop();\n\n   return new TagList(tags, latest);\n};\n","module.exports = require(\"child_process\");","module.exports = require(\"buffer\");","exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n/* nomin */ var debug;\n/* nomin */ if (typeof process === 'object' &&\n    /* nomin */ process.env &&\n    /* nomin */ process.env.NODE_DEBUG &&\n    /* nomin */ /\\bsemver\\b/i.test(process.env.NODE_DEBUG))\n  /* nomin */ debug = function() {\n    /* nomin */ var args = Array.prototype.slice.call(arguments, 0);\n    /* nomin */ args.unshift('SEMVER');\n    /* nomin */ console.log.apply(console, args);\n    /* nomin */ };\n/* nomin */ else\n  /* nomin */ debug = function() {};\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\nvar COERCE = R++;\nsrc[COERCE] = '(?:^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i]);\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = options.loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, options);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, options) {\n  var v = parse(version, options);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, options);\n\n  debug('SemVer', version, options);\n  this.options = options;\n  this.loose = !!options.loose;\n\n  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id;\n        if (num >= 0 && num < MAX_SAFE_INTEGER)\n          return num;\n      }\n      return id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  debug('SemVer.compare', this.version, this.options, other);\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.options);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    debug('prerelease compare', i, a, b);\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  this.raw = this.version;\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose));\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, options);\n\n  debug('comparator', comp, options);\n  this.options = options;\n  this.loose = !!options.loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  debug('comp', this);\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.options.loose);\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  debug('Comparator.test', version, this.options.loose);\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  return cmp(version, this.operator, this.semver, this.options);\n};\n\nComparator.prototype.intersects = function(comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required');\n  }\n\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  var rangeTmp;\n\n  if (this.operator === '') {\n    rangeTmp = new Range(comp.value, options);\n    return satisfies(this.value, rangeTmp, options);\n  } else if (comp.operator === '') {\n    rangeTmp = new Range(this.value, options);\n    return satisfies(comp.semver, rangeTmp, options);\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>');\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<');\n  var sameSemVer = this.semver.version === comp.semver.version;\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=');\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'));\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'));\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan;\n};\n\n\nexports.Range = Range;\nfunction Range(range, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range;\n    } else {\n      return new Range(range.raw, options);\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options);\n  }\n\n  if (!(this instanceof Range))\n    return new Range(range, options);\n\n  this.options = options;\n  this.loose = !!options.loose;\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.options.loose;\n  range = range.trim();\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  debug('hyphen replace', range);\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  debug('comparator trim', range, re[COMPARATORTRIM]);\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, this.options);\n  }, this).join(' ').split(/\\s+/);\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, this.options);\n  }, this);\n\n  return set;\n};\n\nRange.prototype.intersects = function(range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required');\n  }\n\n  return this.set.some(function(thisComparators) {\n    return thisComparators.every(function(thisComparator) {\n      return range.set.some(function(rangeComparators) {\n        return rangeComparators.every(function(rangeComparator) {\n          return thisComparator.intersects(rangeComparator, options);\n        });\n      });\n    });\n  });\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, options) {\n  return new Range(range, options).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, options) {\n  debug('comp', comp, options);\n  comp = replaceCarets(comp, options);\n  debug('caret', comp);\n  comp = replaceTildes(comp, options);\n  debug('tildes', comp);\n  comp = replaceXRanges(comp, options);\n  debug('xrange', comp);\n  comp = replaceStars(comp, options);\n  debug('stars', comp);\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, options);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, options) {\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      debug('replaceTilde pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    debug('tilde return', ret);\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, options) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, options);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, options) {\n  debug('caret', comp, options);\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr);\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      debug('replaceCaret pr', pr);\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      debug('no pr');\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    debug('caret return', ret);\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, options) {\n  debug('replaceXRanges', comp, options);\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, options);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, options) {\n  comp = comp.trim();\n  if (!options || typeof options !== 'object')\n    options = { loose: !!options, includePrerelease: false }\n  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr);\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<';\n        if (xm)\n          M = +M + 1;\n        else\n          m = +m + 1;\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    debug('xRange return', ret);\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, options) {\n  debug('replaceStars', comp, options);\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.options);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (!options)\n    options = {}\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      debug(set[i].semver);\n      if (set[i].semver === ANY)\n        continue;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, options) {\n  try {\n    range = new Range(range, options);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, options) {\n  var max = null;\n  var maxSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) { // compare(max, v, true)\n        max = v;\n        maxSV = new SemVer(max, options);\n      }\n    }\n  })\n  return max;\n}\n\nexports.minSatisfying = minSatisfying;\nfunction minSatisfying(versions, range, options) {\n  var min = null;\n  var minSV = null;\n  try {\n    var rangeObj = new Range(range, options);\n  } catch (er) {\n    return null;\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) { // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) { // compare(min, v, true)\n        min = v;\n        minSV = new SemVer(min, options);\n      }\n    }\n  })\n  return min;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, options) {\n  return outside(version, range, '<', options);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, options) {\n  return outside(version, range, '>', options);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, options) {\n  version = new SemVer(version, options);\n  range = new Range(range, options);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.prerelease = prerelease;\nfunction prerelease(version, options) {\n  var parsed = parse(version, options);\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null;\n}\n\nexports.intersects = intersects;\nfunction intersects(r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce;\nfunction coerce(version) {\n  if (version instanceof SemVer)\n    return version;\n\n  if (typeof version !== 'string')\n    return null;\n\n  var match = version.match(re[COERCE]);\n\n  if (match == null)\n    return null;\n\n  return parse((match[1] || '0') + '.' + (match[2] || '0') + '.' + (match[3] || '0')); \n}\n","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):t.dayjs=n()}(this,function(){\"use strict\";var t=\"millisecond\",n=\"second\",e=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",a=\"year\",o=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,h=/\\[.*?\\]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,f=function(t,n,e){var r=String(t);return!r||r.length>=n?t:\"\"+Array(n+1-r.length).join(e)+t},c={s:f,z:function(t){var n=-t.utcOffset(),e=Math.abs(n),r=Math.floor(e/60),i=e%60;return(n<=0?\"+\":\"-\")+f(r,2,\"0\")+\":\"+f(i,2,\"0\")},m:function(t,n){var e=12*(n.year()-t.year())+(n.month()-t.month()),r=t.clone().add(e,u),i=n-r<0,s=t.clone().add(e+(i?-1:1),u);return Number(-(e+(n-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(o){return{M:u,y:a,w:s,d:i,h:r,m:e,s:n,ms:t}[o]||String(o||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},d={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},$=\"en\",l={};l[$]=d;var m=function(t){return t instanceof D},y=function(t,n,e){var r;if(!t)return null;if(\"string\"==typeof t)l[t]&&(r=t),n&&(l[t]=n,r=t);else{var i=t.name;l[i]=t,r=i}return e||($=r),r},M=function(t,n,e){if(m(t))return t.clone();var r=n?\"string\"==typeof n?{format:n,pl:e}:n:{};return r.date=t,new D(r)},g=c;g.l=y,g.i=m,g.w=function(t,n){return M(t,{locale:n.$L,utc:n.$u})};var D=function(){function f(t){this.$L=this.$L||y(t.locale,null,!0)||$,this.parse(t)}var c=f.prototype;return c.parse=function(t){this.$d=function(t){var n=t.date,e=t.utc;if(null===n)return new Date(NaN);if(g.u(n))return new Date;if(n instanceof Date)return new Date(n);if(\"string\"==typeof n&&!/Z$/i.test(n)){var r=n.match(o);if(r)return e?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(n)}(t),this.init()},c.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},c.$utils=function(){return g},c.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},c.isSame=function(t,n){var e=M(t);return this.startOf(n)<=e&&e<=this.endOf(n)},c.isAfter=function(t,n){return M(t)<this.startOf(n)},c.isBefore=function(t,n){return this.endOf(n)<M(t)},c.$g=function(t,n,e){return g.u(t)?this[n]:this.set(e,t)},c.year=function(t){return this.$g(t,\"$y\",a)},c.month=function(t){return this.$g(t,\"$M\",u)},c.day=function(t){return this.$g(t,\"$W\",i)},c.date=function(t){return this.$g(t,\"$D\",\"date\")},c.hour=function(t){return this.$g(t,\"$H\",r)},c.minute=function(t){return this.$g(t,\"$m\",e)},c.second=function(t){return this.$g(t,\"$s\",n)},c.millisecond=function(n){return this.$g(n,\"$ms\",t)},c.unix=function(){return Math.floor(this.valueOf()/1e3)},c.valueOf=function(){return this.$d.getTime()},c.startOf=function(t,o){var h=this,f=!!g.u(o)||o,c=g.p(t),d=function(t,n){var e=g.w(h.$u?Date.UTC(h.$y,n,t):new Date(h.$y,n,t),h);return f?e:e.endOf(i)},$=function(t,n){return g.w(h.toDate()[t].apply(h.toDate(),(f?[0,0,0,0]:[23,59,59,999]).slice(n)),h)},l=this.$W,m=this.$M,y=this.$D,M=\"set\"+(this.$u?\"UTC\":\"\");switch(c){case a:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var D=this.$locale().weekStart||0,S=(l<D?l+7:l)-D;return d(f?y-S:y+(6-S),m);case i:case\"date\":return $(M+\"Hours\",0);case r:return $(M+\"Minutes\",1);case e:return $(M+\"Seconds\",2);case n:return $(M+\"Milliseconds\",3);default:return this.clone()}},c.endOf=function(t){return this.startOf(t,!1)},c.$set=function(s,o){var h,f=g.p(s),c=\"set\"+(this.$u?\"UTC\":\"\"),d=(h={},h[i]=c+\"Date\",h.date=c+\"Date\",h[u]=c+\"Month\",h[a]=c+\"FullYear\",h[r]=c+\"Hours\",h[e]=c+\"Minutes\",h[n]=c+\"Seconds\",h[t]=c+\"Milliseconds\",h)[f],$=f===i?this.$D+(o-this.$W):o;return this.$d[d]&&this.$d[d]($),this.init(),this},c.set=function(t,n){return this.clone().$set(t,n)},c.add=function(t,o){var h,f=this;t=Number(t);var c=g.p(o),d=function(n,e){var r=f.clone().set(\"date\",1).set(n,e+t);return r.set(\"date\",Math.min(f.$D,r.daysInMonth()))},$=function(n){var e=new Date(f.$d);return e.setDate(e.getDate()+n*t),g.w(e,f)};if(c===u)return d(u,this.$M);if(c===a)return d(a,this.$y);if(c===i)return $(1);if(c===s)return $(7);var l=(h={},h[e]=6e4,h[r]=36e5,h[n]=1e3,h)[c]||1,m=this.valueOf()+t*l;return g.w(m,this)},c.subtract=function(t,n){return this.add(-1*t,n)},c.format=function(t){var n=this;if(!this.isValid())return\"Invalid Date\";var e=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=g.z(this),i=this.$locale(),s=i.weekdays,u=i.months,a=function(t,n,e,r){return t&&t[n]||e[n].substr(0,r)},o=function(t){return g.s(n.$H%12||12,t,\"0\")},f={YY:String(this.$y).slice(-2),YYYY:String(this.$y),M:String(this.$M+1),MM:g.s(this.$M+1,2,\"0\"),MMM:a(i.monthsShort,this.$M,u,3),MMMM:u[this.$M],D:String(this.$D),DD:g.s(this.$D,2,\"0\"),d:String(this.$W),dd:a(i.weekdaysMin,this.$W,s,2),ddd:a(i.weekdaysShort,this.$W,s,3),dddd:s[this.$W],H:String(this.$H),HH:g.s(this.$H,2,\"0\"),h:o(1),hh:o(2),a:this.$H<12?\"am\":\"pm\",A:this.$H<12?\"AM\":\"PM\",m:String(this.$m),mm:g.s(this.$m,2,\"0\"),s:String(this.$s),ss:g.s(this.$s,2,\"0\"),SSS:g.s(this.$ms,3,\"0\"),Z:r};return e.replace(h,function(t){return t.indexOf(\"[\")>-1?t.replace(/\\[|\\]/g,\"\"):f[t]||r.replace(\":\",\"\")})},c.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},c.diff=function(t,o,h){var f,c=g.p(o),d=M(t),$=6e4*(d.utcOffset()-this.utcOffset()),l=this-d,m=g.m(this,d);return m=(f={},f[a]=m/12,f[u]=m,f.quarter=m/3,f[s]=(l-$)/6048e5,f[i]=(l-$)/864e5,f[r]=l/36e5,f[e]=l/6e4,f[n]=l/1e3,f)[c]||l,h?m:g.a(m)},c.daysInMonth=function(){return this.endOf(u).$D},c.$locale=function(){return l[this.$L]},c.locale=function(t,n){if(!t)return this.$L;var e=this.clone();return e.$L=y(t,n,!0),e},c.clone=function(){return g.w(this.toDate(),this)},c.toDate=function(){return new Date(this.$d)},c.toJSON=function(){return this.toISOString()},c.toISOString=function(){return this.$d.toISOString()},c.toString=function(){return this.$d.toUTCString()},f}();return M.prototype=D.prototype,M.extend=function(t,n){return t(n,D,M),M},M.locale=y,M.isDayjs=m,M.unix=function(t){return M(1e3*t)},M.en=l[$],M.Ls=l,M});\n"],"sourceRoot":""}